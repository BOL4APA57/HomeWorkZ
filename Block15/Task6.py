# Задача 6. Уникальные элементы
# Что нужно сделать
#
# Даны два списка целых чисел, оба списка заполняются с клавиатуры. В первый список вводится три числа, во второй — семь чисел.
# Напишите программу, которая запрашивает у пользователя эти числа, затем расширяет первый список элементами второго
# и после этого оставляет в первом списке только уникальные элементы, то есть удаляет лишние повторы чисел.
# Условный оператор использовать нельзя.
#
#
#
# Пример:
#
# Введите 1-е число для первого списка: 1
#
# Введите 2-е число для первого списка: 2
#
# Введите 3-е число для первого списка: 3
#
# Введите 1-е число для второго списка: 2
#
# Введите 2-е число для второго списка: 4
#
# Введите 3-е число для второго списка: 6
#
# Введите 4-е число для второго списка: 3
#
# Введите 5-е число для второго списка: 3
#
# Введите 6-е число для второго списка: 2
#
# Введите 7-е число для второго списка: 1
#
# Первый список: [1, 2, 3]
#
# Второй список: [2, 4, 6, 3, 3, 2, 1]
#
#
#
# Новый первый список с уникальными элементами: [4, 6, 3, 2, 1]
#
#
#
# Что оценивается
#
# Результат вычислений корректен.
# Input содержит корректные приглашения для ввода.
# Формат вывода соответствует примеру.
# Для решения задачи не используется set.
# Переменные и функции имеют значащие имена, не только a, b, c, d (подробнее об этом в видео 2.3).

# def start

def appls(count):
    ls = []
    for st in range(count):
        ls.append(int(input(f"Введите {st + 1}-е число списка: ")))
    return ls
# def end


print("Заполнение первого списка.")
first = appls(3)
print("\nЗаполнение второго списка.")
second = appls(7)
print(f"Первый список: {first}\nВторой список: {second}")

first.extend(second)
for char in first:
    while first.count(char) > 1:
        first.remove(char)
print("Новый первый список с уникальными элементами:", first)

#TODO Решено верно, НО! в цикле можно перебирать не индексы списка, а прямо элементы списка, то есть:
# for i_elem in first:
#   pass
#ЗачОт